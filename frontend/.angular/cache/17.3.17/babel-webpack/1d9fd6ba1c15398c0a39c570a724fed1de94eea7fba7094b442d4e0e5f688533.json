{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst API_URL = 'http://localhost:8080/api/tasks';\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n  }\n  getTasks() {\n    return this.http.get(API_URL);\n  }\n  getTask(id) {\n    return this.http.get(`${API_URL}/${id}`);\n  }\n  createTask(task) {\n    return this.http.post(API_URL, task);\n  }\n  updateTask(id, task) {\n    return this.http.put(`${API_URL}/${id}`, task);\n  }\n  deleteTask(id) {\n    return this.http.delete(`${API_URL}/${id}`);\n  }\n  static {\n    this.ɵfac = function TaskService_Factory(t) {\n      return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskService,\n      factory: TaskService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["API_URL","TaskService","constructor","http","getTasks","get","getTask","id","createTask","task","post","updateTask","put","deleteTask","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/var/www/html/assessment/frontend/src/app/services/task.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Task, TaskRequest } from '../models/task.model';\n\nconst API_URL = 'http://localhost:8080/api/tasks';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private http: HttpClient) {}\n\n  getTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(API_URL);\n  }\n\n  getTask(id: number): Observable<Task> {\n    return this.http.get<Task>(`${API_URL}/${id}`);\n  }\n\n  createTask(task: TaskRequest): Observable<Task> {\n    return this.http.post<Task>(API_URL, task);\n  }\n\n  updateTask(id: number, task: TaskRequest): Observable<Task> {\n    return this.http.put<Task>(`${API_URL}/${id}`, task);\n  }\n\n  deleteTask(id: number): Observable<any> {\n    return this.http.delete(`${API_URL}/${id}`);\n  }\n}"],"mappings":";;AAKA,MAAMA,OAAO,GAAG,iCAAiC;AAKjD,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAASL,OAAO,CAAC;EACvC;EAEAM,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAO,GAAGL,OAAO,IAAIO,EAAE,EAAE,CAAC;EAChD;EAEAC,UAAUA,CAACC,IAAiB;IAC1B,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAOV,OAAO,EAAES,IAAI,CAAC;EAC5C;EAEAE,UAAUA,CAACJ,EAAU,EAAEE,IAAiB;IACtC,OAAO,IAAI,CAACN,IAAI,CAACS,GAAG,CAAO,GAAGZ,OAAO,IAAIO,EAAE,EAAE,EAAEE,IAAI,CAAC;EACtD;EAEAI,UAAUA,CAACN,EAAU;IACnB,OAAO,IAAI,CAACJ,IAAI,CAACW,MAAM,CAAC,GAAGd,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC7C;;;uBAtBWN,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXjB,WAAW;MAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}